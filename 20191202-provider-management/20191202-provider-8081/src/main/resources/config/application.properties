server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/teach?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.lee.springcloud.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# !!!!如果从eureka中发现服务的话，就必须通过eureka的Application的值进行发现，不再通过provider的IP地址和端口号进行调用(负载均衡)
# eureka的Application的值对应的就是spring.application.name的值
spring.application.name=book-provider

# 配置eureka的地址
# eureka.client.service-url.defaultZone=http://localhost:7081/eureka
# 配置eureka的集群的地址
eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka
# 配置在eureka中的唯一标识符(实例id)
# ！！！这个实例id一定要保证唯一，绝对不能重复！！！
eureka.instance.instance-id=book-provider-8081

# 配置actuator/info
# 为什么要配置该信息？
# 虽然eureka目前只有一个服务，但是在正式的开发环境中一定会有很多个provider
# 很有可能在项目组中，一个人单独开发一个服务(项目的模块(userinfo,pay,order...))，也就是说把所有的服务(模块)组合在一起才是一个完成的项目
# 很明显一个人是无法完成这10个provider，团队合作开发
# 电商项目
# 张三--->order--->110
# 李四--->pay--->111
# 王五--->cart--->112
# 鼠标放在连接上的时候可以直接看到该服务的ip地址
eureka.instance.prefer-ip-address=true

# 配置actuator/info信息
# 作者，公司名，服务介绍(公司有模板，可以直接复制粘贴)
# 必须要以info开头，其他的随意，开心就好
# 必须要添加jar包(actuator)
info.author.name=Seven Lee
info.company.name=AAA SoftWare Education
info.project.description=这是一个demo
info.dhakjhfjdsjhf=321971djkahf
info.321321=3217841274612

# 配置eureka失效自我保护
# 规定自己向eureka所发送心跳的时间(5s)
# eureka.instance.lease-renewal-interval-in-seconds=5
# 告诉eureka最终多久之后没有接收心跳直接把provider剔除
# 可以根据以下配置的值不同来确定eureka的自我保护是否失效
# provider和eureka并不是部署在一台服务器上的，无论是注册还是发送心跳就会产生远程调用(需要时间(0.02s))
# 网络延迟(4s)
# eureka.instance.lease-expiration-duration-in-seconds=10
# 在eureka的失效自我保护时间的时候，正式环境，剔除的时间应该比eureka所接收心跳的时间长(2s-5s之间)

# 配置zipkin的服务器端的地址
spring.zipkin.base-url=http://localhost:4081
# 配置链信息采集样率
# 百分比 0.1:只提交10%的信息，1.0可以提交100%的信息
spring.sleuth.sampler.probability=1.0























